{"version":3,"file":"static/js/210.956b44ad.chunk.js","mappings":"8JAAe,SAASA,EAAqBC,EAAQC,EAAYC,GAC7D,MAAwBF,EAAEG,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdH,GAAY,kBAAKD,GAAK,cAAGG,EAAOC,IACpC,C,4GCiCA,EAtBiC,SAAH,GAAkC,IAA5BC,EAAQ,EAARA,SAAUC,EAAK,EAALA,MACtCC,GAAUC,EAAAA,EAAAA,OACKC,EAAAA,EAAAA,YAAWC,EAAAA,GAE9B,OACI,gBAAKC,UAAU,gBAAe,UAC1B,iBAAKA,UAAU,qBAAoB,WAC/B,iBAAKA,UAAU,iCAAgC,WAC3C,SAAC,MAAoB,CAACC,QAAS,kBAAML,EAAQM,QAAQ,KACrD,0BAAOP,QAEX,gBAAKK,UAAU,0BAAyB,SACnCN,KAEL,gBAAKM,UAAU,uCAM/B,C,yKC1Be,SAASG,IACpB,MAAkCC,EAAAA,WAAuB,eAAlDC,EAAS,KAAEC,EAAY,KAC9B,EAA4BF,EAAAA,SAAe,CACvCG,KAAM,KACR,eAFKC,EAAM,KAAEC,EAAS,KA0BxB,OApBAL,EAAAA,WAAgB,WACZ,IAAMM,EAAe,yCAAG,mFAChBF,EAAOD,KACPI,EAAAA,GAAAA,IAAU,2DAAD,OAA4DH,EAAOD,OAAQK,MAAK,SAACC,GAClFA,EAAIC,MACJR,EAAaO,EAAIC,KAEzB,IAEAH,EAAAA,GAAAA,IAAU,kDAAkDC,MAAK,SAACC,GAC1DA,EAAIC,MACJR,EAAaO,EAAIC,KAEzB,IACH,2CACJ,kBAdoB,mCAgBrBJ,GACJ,GAAG,CAACF,EAAOD,QAGP,SAAC,IAAO,CAACZ,MAAM,gCAAyB,UACpC,gBAAKK,UAAU,mBAAkB,UAC7B,iBAAKA,UAAU,eAAc,WACzB,iBAAMe,OAAO,GAAE,UACX,gBAAKf,UAAU,sBAAqB,UAChC,kBAAOgB,KAAK,OAAOhB,UAAU,eAAeiB,YAAY,wBAAwBzB,KAAK,OAAOC,MAAOe,EAAOD,KAAMW,SA5BpH,SAAC9B,GAAuB,OAAKD,EAAAA,EAAAA,GAAqBC,EAAGoB,EAAQC,EAAW,QAgC/D,OAATJ,QAAS,IAATA,OAAS,EAATA,EAAWc,KAAI,SAACC,EAAMC,GAAE,OACpB,iBAAKrB,UAAU,WAAU,WACrB,eAAIsB,MAAO,CAAEC,cAAe,cAAe,SAAEH,EAAKI,YAClD,wCAAgBJ,EAAKK,KAAI,WACzB,kBAAMzB,UAAU,iBAAgB,WAC5B,SAAC,MAAU,IACVoB,EAAKM,UALiBL,EAOzB,UAOlC,C","sources":["app/helpers/ChangeInputRecursive.ts","resources/components/layout/Wrapper.tsx","resources/views/Satisfaction/ListProviders/ListProviders.tsx"],"sourcesContent":["export default function changeInputRecursive(e: any, state: any, changeState: any) {\n    const { name, value } = e.target;\n    changeState({ ...state, [name]: value });\n}\n","import React, { useContext } from 'react';\nimport { ContextState } from '../../../context/DataProvider';\nimport { HiOutlineChevronLeft } from 'react-icons/hi';\nimport { Link, useHistory } from 'react-router-dom';\nimport './wrapper.css';\n\n//style\nimport './wrapper.css';\n\ntype Props = {\n    children?: React.ReactNode,\n    title: string\n}\n\nconst Wrapper: React.FC<Props> = ({ children, title }: any) => {\n    let history = useHistory();\n    const state: any = useContext(ContextState);\n\n    return (\n        <div className='container_app'>\n            <div className='container_init_app'>\n                <div className='container_init_app_header my-4'>\n                    <HiOutlineChevronLeft onClick={() => history.goBack()} />\n                    <span>{title}</span>\n                </div>\n                <div className='container_init_app_main'>\n                    {children}\n                </div>\n                <div className='container_init_app_footer my-4'>\n                    \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Wrapper;\n","import React from 'react'\nimport Wrapper from '../../../components/layout/Wrapper'\nimport { AiFillStar } from 'react-icons/ai'\n\nimport '../satisfaction.css';\nimport changeInputRecursive from '../../../../app/helpers/ChangeInputRecursive';\nimport axios from 'axios';\n\nexport default function ListProviders() {\n    const [providers, setProviders] = React.useState<any[]>();\n    const [search, setSearch] = React.useState({\n        text: ''\n    });\n\n    const changeInput = (e: React.SyntheticEvent) => changeInputRecursive(e, search, setSearch);\n\n    React.useEffect(() => {\n        const getClientExists = async () => {\n            if (search.text) {\n                axios.get(`https://me-ajuda-ai.herokuapp.com/api/provider?provider=${search.text}`).then((res) => {\n                    if (res.data) {\n                        setProviders(res.data);\n                    }\n                });\n            } else {\n                axios.get(`https://me-ajuda-ai.herokuapp.com/api/provider`).then((res) => {\n                    if (res.data) {\n                        setProviders(res.data);\n                    }\n                });\n            }\n        }\n\n        getClientExists();\n    }, [search.text]);\n\n    return (\n        <Wrapper title='Pontuação de provedores'>\n            <div className='satisfaction_box'>\n                <div className='box_provider'>\n                    <form action=\"\">\n                        <div className='controllerForm mt-3'>\n                            <input type=\"text\" className='form-control' placeholder='Pesquisar provedor...' name='text' value={search.text} onChange={changeInput} />\n                        </div>\n                    </form>\n                    {\n                        providers?.map((prov, id) => (\n                            <div className='box_list' key={id}>\n                                <h2 style={{ textTransform: 'capitalize' }}>{prov.provider}</h2>\n                                <span>Plano de {prov.plan}mbps</span>\n                                <span className='box_list_start'>\n                                    <AiFillStar />\n                                    {prov.rate}\n                                </span>\n                            </div>\n                        ))\n                    }\n                </div >\n            </div>\n        </Wrapper>\n    )\n}\n"],"names":["changeInputRecursive","e","state","changeState","target","name","value","children","title","history","useHistory","useContext","ContextState","className","onClick","goBack","ListProviders","React","providers","setProviders","text","search","setSearch","getClientExists","axios","then","res","data","action","type","placeholder","onChange","map","prov","id","style","textTransform","provider","plan","rate"],"sourceRoot":""}